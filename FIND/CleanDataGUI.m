function CleanDataGUI()
% GUI for operating the CleanData function.
%
% here a couple of parameters and methods can be chosen
% used as UI to parameter value pair generation for the
% command line function CleanData.m
%
% a.kilias 06/08
%
% This function belongs to FIND_GUI Toolbox project
% http://find.bccn.uni-freiburg.de

global nsFile; %-% if needed.

global BUTTON_HEIGHT;
global LABEL_HEIGHT;
global MESSAGEBAR_PANEL_HEIGHT;
global MESSAGEBAR_LEFT_OFFSET;
global MESSAGEBAR_RIGHT_OFFSET;

try


    if ishandle(findobj('tag', 'CleanDataGUI'))
        close(findobj('tag', 'CleanDataGUI'));
    end;

    %%%%%%%%%%%%%%%%%%% GUI window %%%%%%%%%%%%%%%%%%%
    GUIxPos=20;
    GUIyPos=20;
    GUIwidth=70;
    GUIheight=20;

    GUIwindow=figure('Units','characters',...
        'Position',[GUIxPos GUIyPos GUIwidth 1.3*GUIheight], ...
        'Tag','CleanDataGUI', ...
        'Name','CleanData GUI',...
        'MenuBar','none',...
        'NumberTitle','off',...
        'resize','off');

    %%%%%%%%%%%%%%%%%%%% panels %%%%%%%%%%%%%%%%%%%
    centralPanel=uipanel('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[0 MESSAGEBAR_PANEL_HEIGHT ...
        GUIwidth ((1.3*GUIheight)-MESSAGEBAR_PANEL_HEIGHT)],...
        'Tag','CleanDataGUI_centralPanel',...
        'BackgroundColor', [0.8 0.8 0.8]);

    messageBarPanel=uipanel('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[0 0 ...
        GUIwidth MESSAGEBAR_PANEL_HEIGHT],...
        'Tag','CleanDataGUI_messageBarPanel');

    % message bar
    messageBarPanelPos=get(messageBarPanel,'Position');
    uicontrol('Parent',messageBarPanel,...
        'Units','characters',...
        'Position',[(messageBarPanelPos(1)+MESSAGEBAR_LEFT_OFFSET) ...
        (messageBarPanelPos(2)) ...
        (messageBarPanelPos(3)-MESSAGEBAR_RIGHT_OFFSET) ...
        LABEL_HEIGHT],...
        'Tag','CleanDataGUI_messageBarText',...
        'Enable','on',...
        'String','',...
        'HorizontalAlignment','left',...
        'Style','text');

    %%%%%%%%%%%%%%%%%%%% RUN button %%%%%%%%%%%%%%%%%%%
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[46 3.5 11 BUTTON_HEIGHT],...
        'Style','pushbutton',...
        'String','RUN',...
        'Tag','CleanDataGUI_CleanDataPushbutton',...
        'Enable','on',...
        'Callback',@CleanDataPushbuttonCallback);

    %%%%%%%%%%%%%%%%%%% Parameters %%%%%%%%%%%%%%%%%%%

    %%%% Checkboxes
    % use filtered data
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[36    20.4    25    BUTTON_HEIGHT],...
        'Style','checkbox',...
        'String','use LP-filter 1kHz',...
        'Tag','CleanDataGUI_filterData',...
        'Enable','off');

    %%%% data traces
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[4    20.2    20  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[]',...
        'Tag','CleanDataGUI_selectedEntity',...
        'Enable','on');
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[4    (21.5)    20    LABEL_HEIGHT],...
        'Style','text',...
        'String','EntityIDs',...
        'Tag','CleanDataGUI_selectedEntityLabelText',...
        'Enable','on');

    %%%% chunk size
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[4    (16.8)    20  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[]',...
        'Tag','CleanDataGUI_ChunkSize',...
        'Enable','on');
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[4   (18.1)   20    LABEL_HEIGHT],...
        'Style','text',...
        'String','chunk size [ms]',...
        'Tag','CleanDataGUI_ChunkSizeText',...
        'Enable','on');

    %%%% plotData
    plotControl=uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[4    9.3    16    BUTTON_HEIGHT],...
        'Style','checkbox',...
        'String','plotData',...
        'Tag','CleanDataGUI_plotData',...
        'Callback', @checkboxPlot_Callback,...
        'Enable','on');

    %%%% analogDisplayOffset
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[22   (7.6)    10  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[]',...
        'Tag','CleanDataGUI_analogDisplayOffset',...
        'Enable','off');
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[4    (7.6)   17    LABEL_HEIGHT],...
        'Style','text',...
        'String','Display Offset :',...
        'Tag','CleanDataGUI_analogDisplayOffsetText',...
        'Enable','off');

    %%%% use only sequence
    % bool
    plotControl=uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[4    4.5   20   BUTTON_HEIGHT],...
        'Style','checkbox',...
        'String','clean Sequence',...
        'Tag','CleanDataGUI_useSequence',...
        'Callback', @checkboxUseSequence_Callback,...
        'Enable','on');

    % set start time and duration
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[24  3   10  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[]',...
        'Tag','CleanDataGUI_SequenceStart',...
        'Enable','off');
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[4   3  17    LABEL_HEIGHT],...
        'Style','text',...
        'String','Start [s]:',...
        'Tag','CleanDataGUI_SequenceStartText',...
        'Enable','off');

    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[24   1.5   10  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[]',...
        'Tag','CleanDataGUI_SequenceDuration',...
        'Enable','off');
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[4    1.5   17    LABEL_HEIGHT],...
        'Style','text',...
        'String','Duration [s]:',...
        'Tag','CleanDataGUI_SequenceDurationText',...
        'Enable','off');

    %%%% median
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[55   (10.7)    10  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[20]',...
        'Tag','CleanDataGUI_median',...
        'Enable','on');
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[43    (10.7)   10    LABEL_HEIGHT],...
        'Style','text',...
        'String','median : ',...
        'Tag','CleanDataGUI_medianText',...
        'Enable','on');

    %%%% theshold factor
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[55   (18.9)    10  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[2.5]',...
        'Tag','CleanDataGUI_thresFactor',...
        'Enable','on');
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[36    (18.9)   17    LABEL_HEIGHT],...
        'Style','text',...
        'String','thres. factor N : ',...
        'Tag','CleanDataGUI_thresFactorText',...
        'Enable','on');

    %%%% samplepoints to replace around spikes
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[5   (12.1)    8  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[10]',...
        'Tag','CleanDataGUI_replacePre',...
        'Enable','on');
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[15   (12.1)    8  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[10]',...
        'Tag','CleanDataGUI_replacePost',...
        'Enable','on');
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[3.8    (13.8)   22    2.2*LABEL_HEIGHT],...
        'Style','text',...
        'String',{['replace spikes'];['addit. +/- SamplePts.']},...
        'Tag','CleanDataGUI_replacePtsText',...
        'Enable','on');

    %%%% RadioButtonGroup - Spike Detection Method Selection %%%%%%%%%%%

    radioGroup = uibuttongroup('visible','off'...
        ,'Units','characters',...
        'Position',[35 10.1 GUIwidth/2-3.5 (GUIheight)*.7-1.2],...
        'Parent',centralPanel,...
        'Tag','CleanDataGUI_radioGroup',...
        'Title','Spike Detection Method');

    radioButton1 = uicontrol('Style','Radio',...
        'String','1) rect. N * Median',...
        'Units','characters',...
        'pos',[.5 6.4 23 BUTTON_HEIGHT],...
        'parent',radioGroup,...
        'HandleVisibility','off',...
        'Tag','CleanDataGUI_radioButton1');

    radioButton2 = uicontrol('Style','Radio',...
        'String','2) rect. Mean + N*SD',...
        'Units','characters',...
        'pos',[.5 4.9 27 BUTTON_HEIGHT],...
        'parent',radioGroup,...
        'HandleVisibility','off',...
        'Tag','CleanDataGUI_radioButton2');

    radioButton3 = uicontrol('Style','Radio',...
        'String','3) Mean + N*SD',...
        'Units','characters',...
        'pos',[.5 3.4 23 BUTTON_HEIGHT],...
        'parent',radioGroup,...
        'HandleVisibility','off',...
        'Tag','CleanDataGUI_radioButton3');

    radioButton4 = uicontrol('Style','Radio',...
        'String','4) with known [median]',...
        'Units','characters',...
        'pos',[.5 1.9 27 BUTTON_HEIGHT],...
        'parent',radioGroup,...
        'HandleVisibility','off',...
        'Tag','CleanDataGUI_radioButton4');

    %%%% set some defaults
    set(findobj(GUIwindow,'Tag','CleanDataGUI_selectedEntity'),'String',['[',num2str(nsFile.Analog.DataentityIDs),']']);
    set(findobj(GUIwindow,'Tag','CleanDataGUI_ChunkSize'),'String','[1000]');
    set(findobj(GUIwindow,'Tag','CleanDataGUI_analogDisplayOffset'),'String','[100]');
    set(findobj(GUIwindow,'Tag','CleanDataGUI_SequenceStart'),'String','[0]');
    set(findobj(GUIwindow, 'Tag','CleanDataGUI_filterData'),'Value', 1);

    set(radioGroup,'SelectionChangeFcn',@selMethod_callback);
    set(radioGroup,'SelectedObject',[radioButton1]);  % Select one Default
    set(radioGroup,'UserData','1) rect. N * Median'); % also set the userdata default
    set(radioGroup,'Visible','on');

catch
    close(findobj('tag', 'CleanDataGUI'));
    rethrow(lasterror);
end


%%%%%%%%%%%%%%%%%%%% FUNCTIONS %%%%%%%%%%%%%%%%%%%%

function CleanDataPushbuttonCallback(source,event)

global nsFile; %-% if needed
try
    postMessage('Busy - please wait...');
    disp('start data cleaning');

    %%%%%%%%%%%%%%%%%%%% grab Parameters %%%%%%%%%%%%%%%%%%%%

    % EntityID
    tmp1=findobj('Tag','CleanDataGUI_selectedEntity');
    userString =get(tmp1(1),'String'); % use first VALUE IF MULTIPLE FIGURES ARE OPEN
    ChannelEntityIDs=str2num((userString));

    % chunk size
    tmp2=findobj('Tag','CleanDataGUI_ChunkSize');
    userString =get(tmp2(1),'String');
    ChunkSize=str2num((userString));

    % thres. factor
    tmp7=findobj('Tag','CleanDataGUI_thresFactor');
    userString =get(tmp7(1),'String');
    thresFactor=str2num((userString));

    % known median
    tmp10=findobj('Tag','CleanDataGUI_median');
    userString =get(tmp10(1),'String');
    knownMedian=str2num((userString));


    % relpace spikes - Pre
    tmp8=findobj('Tag','CleanDataGUI_replacePre');
    userString =get(tmp8(1),'String');
    prePts=str2num((userString));

    % replace spikes - Post
    tmp9=findobj('Tag','CleanDataGUI_replacePost');
    userString =get(tmp9(1),'String');
    postPts=str2num((userString));

    % plotData
    tmp5=findobj('Tag','CleanDataGUI_plotData');
    plotData=get(tmp5,'Value'); % DEFINE BOOL

    % analog Display Offset
    tmp3=findobj('Tag','CleanDataGUI_analogDisplayOffset');
    userString =get(tmp3(1),'String');
    analogDisplayOffset=str2num((userString));

    % useSequence
    tmp10=findobj('Tag','CleanDataGUI_useSequence');
    useSequence=get(tmp10,'Value'); % DEFINE BOOL

    % get Sequence
    tmp11=findobj('Tag','CleanDataGUI_SequenceStart');
    userString =get(tmp11(1),'String');
    SequenceStart=str2num((userString));

    tmp12=findobj('Tag','CleanDataGUI_SequenceDuration');
    userString =get(tmp12(1),'String');
    SequenceDuration=str2num((userString));

    % filter Data
    tmp4=findobj('Tag','CleanDataGUI_filerData');
    doFilter =get(tmp4,'Value'); % define bool

    % get the selection in the radiobutton group
    tmp6=findobj('Tag','CleanDataGUI_radioGroup');
    userString = get(tmp6(1),'UserData');
    selectedMethodNumber=str2num(userString(1));


    %%%%%%%%%%%%%%%%%%%% get the data %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    if ~isfield(nsFile,'Analog') || ~isfield(nsFile.Analog,'Data') ...
            || isempty(nsFile.Analog.Data)
        error('FIND:noAnalogData','No analog data found in nsFile variable.');
    end

    if ~isfield(nsFile,'Analog') || ~isfield(nsFile.Analog,'DataentityIDs') ...
            || isempty(nsFile.Analog.DataentityIDs)||~isempty(setdiff(ChannelEntityIDs,nsFile.Analog.DataentityIDs))
        error('FIND:noAnalogDataentityIDs','No DataentityIDs found in nsFile variable.');
    end
    for tt=1:length(ChannelEntityIDs)
        posChEntities(tt)=find(ChannelEntityIDs(tt)==nsFile.Analog.DataentityIDs);
    end
    if useSequence
        if SequenceStart==0
            FirstSample=1;
        else
            FirstSample=SequenceStart*nsFile.Analog.Info(posChEntities(1)).SampleRate;
        end
        LastSample=(SequenceStart+SequenceDuration)*nsFile.Analog.Info(posChEntities(1)).SampleRate;
        tdata=nsFile.Analog.Data(FirstSample:LastSample,posChEntities);
    else
        tdata=nsFile.Analog.Data(:,posChEntities);
    end
    ptspercut=(ChunkSize/1000)*nsFile.Analog.Info(posChEntities(1)).SampleRate;% assuming the same sampling frequency for all Channels time is converted into sampling steps analysed in a chunk
    disp(['each cunk contains ',  num2str(ptspercut),' data points']);
    action=NaN; % could be anything but not a char


    %%%%%%%%%%%%%%%%%%%% call function %%%%%%%%%%%%%%%%%%%%

    out=CleanData('action',action,...
        'tdata',tdata,...
        'plotData',plotData,...
        'ptspercut',ptspercut,...
        'doFilter',doFilter,...
        'detectMeth',selectedMethodNumber,...
        'prepts',prePts,...
        'postpts',postPts,...
        'thresholdFactor',thresFactor,...
        'knownMedian', knownMedian,...
        'analogDisplayOffset',analogDisplayOffset,...
        'ChannelEntityIDs',ChannelEntityIDs);

    newdata.Analog.DataentityIDs=max([[nsFile.EntityInfo.EntityID],[nsFile.Analog.DataentityIDs],...
        [nsFile.Event.EntityID],[nsFile.Segment.DataentityIDs],[nsFile.Neural.EntityID]])+[1:length(ChannelEntityIDs)];
    disp(['cleaned Data (same order as input vector) stored in DataentityIDs: ', num2str(newdata.Analog.DataentityIDs)])
    newdata.Analog.Data=out(:,1:length(ChannelEntityIDs));
    [usedIDs]=store_ns_newanalogdata('newdata',newdata);

    % refresh the new Analog Infos
    for kk=1:length(usedIDs)
        posAnalogInfo=find([nsFile.Analog.DataentityIDs]==usedIDs(kk));
        nsFile.Analog.Info(posAnalogInfo).EntityLabel=['cleaned Data: ';nsFile.Analog.Info(posAnalogInfo).EntityLabel];
    end


    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    postMessage('...done.');
catch
    handleError(lasterror);
end

% %% Get the Spike Detection Method chosen via radiobuttion-changefunction
function selMethod_callback(source,eventdata)
% disp(get(get(source,'SelectedObject'),'String'));
temp=get(get(source,'SelectedObject'),'String');
tmp=findobj('Tag','CleanDataGUI_radioGroup');
set(tmp,'UserData',temp);



% %% en- or disable input to plot options
function checkboxPlot_Callback(hObject, eventdata, handles)
if (get(findobj('Tag','CleanDataGUI_plotData'),'Value') == get(findobj('Tag','CleanDataGUI_plotData'),'Max'))
    set(findobj('Tag','CleanDataGUI_analogDisplayOffset'),'Enable','on');
    set(findobj('Tag','CleanDataGUI_analogDisplayOffsetText'),'Enable','on');
else
    set(findobj('Tag','CleanDataGUI_analogDisplayOffset'),'Enable','off');
    set(findobj('Tag','CleanDataGUI_analogDisplayOffsetText'),'Enable','off');
end


% %% en- or disable sequence loading
function checkboxUseSequence_Callback(hObject, eventdata, handles)
if (get(findobj('Tag','CleanDataGUI_useSequence'),'Value') == get(findobj('Tag','CleanDataGUI_useSequence'),'Max'))
    set(findobj('Tag','CleanDataGUI_SequenceStart'),'Enable','on');
    set(findobj('Tag','CleanDataGUI_SequenceDuration'),'Enable','on');
     set(findobj('Tag','CleanDataGUI_SequenceStartText'),'Enable','on');
    set(findobj('Tag','CleanDataGUI_SequenceDurationText'),'Enable','on');
else
    set(findobj('Tag','CleanDataGUI_SequenceStart'),'Enable','off');
    set(findobj('Tag','CleanDataGUI_SequenceDuration'),'Enable','off');
      set(findobj('Tag','CleanDataGUI_SequenceStartText'),'Enable','off');
    set(findobj('Tag','CleanDataGUI_SequenceDurationText'),'Enable','off');
end
