function autoAlignGUI()
% GUI initialization of the autoAlign GUI.
%
% This function belongs to FIND_GUI Toolbox project
% http://find.bccn.uni-freiburg.de

global nsFile; %-% if needed.

global BUTTON_HEIGHT;
global LABEL_HEIGHT;
global MESSAGEBAR_PANEL_HEIGHT;
global MESSAGEBAR_LEFT_OFFSET;
global MESSAGEBAR_RIGHT_OFFSET;

try
    
    % Check if the autoAlign GUI is already open
    if ishandle(findobj('tag', 'autoAlignGUI'))
        close(findobj('tag', 'autoAlignGUI'));
    end;

    % GUI window
    %-% Values are suggestions for small window
    GUIxPos=20;
    GUIyPos=20;
    GUIwidth=70;
    GUIheight=20;
    
    GUIwindow=figure('Units','characters',...
        'Position',[GUIxPos GUIyPos GUIwidth GUIheight], ... 
        'Tag','autoAlignGUI', ...
        'Name','autoAlign GUI',...
        'NumberTitle','off',...
        'MenuBar','none',...
        'resize','off'); 

    % panels
    centralPanel=uipanel('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[0 MESSAGEBAR_PANEL_HEIGHT ...
                    GUIwidth (GUIheight-MESSAGEBAR_PANEL_HEIGHT)],...
        'Tag','autoAlignGUI_centralPanel',...
        'BackgroundColor', [0.8 0.8 0.8]);

    messageBarPanel=uipanel('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[0 0 ...
                    GUIwidth MESSAGEBAR_PANEL_HEIGHT],...
        'Tag','autoAlignGUI_messageBarPanel');

    % message bar
    messageBarPanelPos=get(messageBarPanel,'Position');
    uicontrol('Parent',messageBarPanel,...
        'Units','characters',...
        'Position',[(messageBarPanelPos(1)+MESSAGEBAR_LEFT_OFFSET) ...
                    (messageBarPanelPos(2)) ...
                    (messageBarPanelPos(3)-MESSAGEBAR_RIGHT_OFFSET) ...
                    LABEL_HEIGHT],...
        'Tag','autoAlignGUI_messageBarText',...
        'Enable','on',...
        'String','Enter Parameters for AutoAligment',...
        'HorizontalAlignment','left',...
        'Style','text');

    % button to run the tool
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[55 10 10 BUTTON_HEIGHT],... 
        'Style','pushbutton',...
        'String','RUN',...
        'Tag','autoAlignGUI_autoAlignPushbutton',...
        'Enable','on',...
        'Callback',@autoAlignPushbuttonCallback); 
        %-% use {@myCallback,arg1,arg2,...} to have args
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     %%%%%%%%%%%%%%% determine the data traces%%%%%%%%%%%%%%%%%%%%
    %%Neural Entities first
     % text label
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[1 15.5    20    LABEL_HEIGHT],...
        'Style','text',...
        'String','[Neural Entities]',...
        'Tag','autoAlignGUI_selectedNeuralEntitiesLabelText',...
        'Enable','on');
    
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[1   13.5    20  LABEL_HEIGHT ],...
        'Style','edit',...
        'String',['[' num2str(1) ':' num2str(size(nsFile.Neural.Data,2)) ']'],...
        'Tag','autoAlignGUI_selectedNeuralEntities',...
        'Enable','on');
    
    %%Event Entities
    % text label
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[25    15.5    20    LABEL_HEIGHT],...
        'Style','text',...
        'String','[Event Entity]',...
        'Tag','autoAlignGUI_selectedEventEntityLabelText',...
        'Enable','on');
    
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[25   13.5    20  LABEL_HEIGHT ],...
        'Style','edit',...
        'String','[1]',...
        'Tag','autoAlignGUI_selectedEventEntity',...
        'Enable','on');

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%Determine Time Cutouts
        %%PreTrigger%%
       % get the Vector which Data Traces should be used
        % text label
    uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[1    9    20   BUTTON_HEIGHT],...
        'Style','text',...
        'String','Pre Trigger [s]',...
        'Tag','autoAlignGUI_PreTriggerTxt',...
        'Enable','on');
    
       uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[1    7    20    BUTTON_HEIGHT],...
        'Style','edit',...
        'String','0.2',...
        'Tag','autoAlignGUI_preCut_ms_Edit',...
        'Enable','on');
    
            %%PostTrigger%%
         uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[25    9    20   BUTTON_HEIGHT],...
        'Style','text',...
        'String','Post Trigger [s]',...
        'Tag','autoAlignGUI_PostTriggerTxt',...
        'Enable','on');
    
       uicontrol('Parent',centralPanel,...
        'Units','characters',...
        'Position',[25   7    20    BUTTON_HEIGHT],...
        'Style','edit',...
        'String','0.2',...
        'Tag','autoAlignGUI_postCut_ms_Edit',...
        'Enable','on');


    %-% rest of GUI below...   

    
catch
    % if error occurs here, the window is closed, the error is rethrown
    % and then catched by the main window
    close(findobj('tag', 'autoAlignGUI'));
    rethrow(lasterror);
end


function autoAlignPushbuttonCallback(source,event) 
% Run tool button callback; starts autoAlign.
% Source and event args are generated by default.
global nsFile; %-% if needed
try
    %%%%%%%%%%%%%get all variables%%%%%%%%%%%%
    %%Entities of neural and event data
    tmp_neural=findobj('Tag','autoAlignGUI_selectedNeuralEntities');
    user_neural =get(tmp_neural(1),'String'); 
    selectedNeuralEntities=str2num(user_neural);
    
    tmp_event=findobj('Tag','autoAlignGUI_selectedEventEntity');
    user_event=get(tmp_event(1),'String'); 
    selectedEventEntity=str2num(user_event);
    %%pre and post trigger times
    tmp_pre=findobj('Tag','autoAlignGUI_preCut_ms_Edit');
    preTriggerMS=str2num(get(tmp_pre,'String'));
    
    tmp_post=findobj('Tag','autoAlignGUI_postCut_ms_Edit');
    postTriggerMS=str2num(get(tmp_post,'String'));
    
    % posting 'busy' message
    postMessage('Busy - please wait...');
    

    autoAlign('neuralIDs',selectedNeuralEntities,'eventID',selectedEventEntity,...
        'preTrigger',preTriggerMS, 'postTrigger',postTriggerMS); %-% arguments?
    postMessage('...done.'); 
catch
   handleError(lasterror); 
end
