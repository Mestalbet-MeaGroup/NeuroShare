{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1031{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \fs20\lang3081\cgrid \snext0 Normal;}{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\lang3081\kerning28\cgrid \sbasedon0 \snext0 heading 1;}{\s2\keepn\widctlpar\adjustright 
\b\f1\lang1031 \sbasedon0 \snext0 heading 2;}{\s3\sb240\sa60\keepn\widctlpar\adjustright \f1\lang3081\cgrid \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\s15\fi-360\li360\widctlpar
\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\lang3081\cgrid \sbasedon0 \snext15 \sautoupd List Bullet;}{\s16\qj\sa220\sl220\slmult0\widctlpar\adjustright \f1\fs20\expnd-1\expndtw-5\lang1031\cgrid \sbasedon0 \snext16 
Body Text;}{\*\cs17 \additive \ul\cf2 \sbasedon10 Hyperlink;}}{\*\listtable{\list\listtemplateid299667000\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 
\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid-119}{\list\listtemplateid201916431\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }
{\listname ;}\listid143283428}{\list\listtemplateid201916431\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid774717791
}{\list\listtemplateid67567617\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1324042431}
{\list\listtemplateid67567617\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1459252050}
{\list\listtemplateid201916431\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid2054309070}}{\*\listoverridetable
{\listoverride\listid-119\listoverridecount0\ls1}{\listoverride\listid-119\listoverridecount0\ls2}{\listoverride\listid-119\listoverridecount0\ls3}{\listoverride\listid-119\listoverridecount0\ls4}{\listoverride\listid-119\listoverridecount0\ls5}
{\listoverride\listid-119\listoverridecount0\ls6}{\listoverride\listid-119\listoverridecount0\ls7}{\listoverride\listid-119\listoverridecount0\ls8}{\listoverride\listid-119\listoverridecount0\ls9}{\listoverride\listid-119\listoverridecount0\ls10}
{\listoverride\listid774717791\listoverridecount0\ls11}{\listoverride\listid143283428\listoverridecount0\ls12}{\listoverride\listid2054309070\listoverridecount0\ls13}{\listoverride\listid1324042431\listoverridecount0\ls14}{\listoverride\listid1459252050
\listoverridecount0\ls15}}{\info{\title Preliminary Documentation on the }{\author Dr. Michael H. Wegelin}{\operator nmi}{\creatim\yr1998\mo8\dy14\hr10\min19}{\revtim\yr2000\mo4\dy6\hr8\min21}{\version116}{\edmins0}{\nofpages12}{\nofwords3624}
{\nofchars20660}{\*\company Software Design}{\nofcharsws0}{\vern113}}\margl1417\margr1417\margt1417\margb1134 \widowctrl\ftnbj\aenddoc\hyphhotz425\hyphcaps0\formshade\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd 
\linex0\headery709\footery709\colsx709\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031\cgrid0 Documentation on the 

\par 
\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\f1\lang1031 {MCStream OLE-Automation Server
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031\cgrid0 
\par Major update for MC_Rack 1.6
\par 
\par With MC_Rack 1.6 there ships a redesig
ned MCStream OLE-Automation Server. Major improvements have been made regarding memory consumption when opening files, that where recorded over many hours and days. On the other hand all interfaces where kept the same, so in principle all applications bui
l
ding on MCStream OLE-Automation Server should work. As fewer objects are hold permanently in memory now, the design is less tolerable to forgetting ReleaseDispatch().  Therfore C/C++ programmers will possibly find new memory leaks. Please check then, that
 you properly release all Automation Objects with ReleaseDispatch(). 
\par 
\par To enhance the opening and reading of files an index to the file is now automatically appended on each new file. For incomplete saved files and for files recorded bevore version MC Rack 1.6 the first call of 
\par 
\par CMCSStreamFile::}{GetSweepCount()
\par 
\par will read }{\lang1031\cgrid0 through all the data and build an index. This index is then written to the windows temporary directory and called mcsidxXXXXXXXX..., where XXXXXXXX... is the time stamp of pressing start fo
r that file. All further openings of that file will use the mcsidxXXXXXXXX.... That means e.g. for the MATLAB interface, that only the first opening of a file can take some time depending on file size, but all further opening are speed up greatly. 
\par 
\par If you are a C/C++ programmers, please call CMCSStreamFile::}{
GetSweepCount() after opening of a file to speed up your random access to old and incomplete saved files. There is no implicite building of the index if you simply read through the file yourself.
\par }{\lang1031\cgrid0 
\par There are some new function regarding the extended Headerinformation:
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
CMCSStreamFile::GetStartTime() gives you a CMCSTimeStamp with start time of data
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
CMCSStreamFile::GetTimeStampStartPressed() gives you a CMCSTimeStamp with time of pressing start, that be later than than the start of data for recording replayed files
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
CMCSStreamFile::GetStopTime() continous it's function. Please remember, that for incomplete saved files and for old file it's value will ge only OK after calling CMCSStreamFile::GetSweepCount(), which read through all the data
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
CMCSStreamFile::GetTimeStamp() is kept for compatibility and gives back CMCSStreamFile::GetStartTime()
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
short CMCSStreamFile::GetElectrodeChannels(), short CMCSStreamFile::GetAnalogChannels(),short CMCSStreamFile::GetDigitalChannels() ,short CMCSStreamFile::GetTotalChannels()\line 
give you information about the MEA/Hardware page channel settings you used. This is important information for users, that do not have MEA Layout.
\par }\pard \widctlpar\adjustright {\lang1031\cgrid0 
\par The MCStream.dll and also MCStreamMEX.dll, the heart of the MATLAB interface (mcintfac) now bind
\par to MFC version 6.0 in a static library. This way we could migrate fully to Visual C++ 6.0
\par while circumventing the incompatibility with the MATLAB editor, that binds dynamically to MFC version 5.0.
\par 
\par If you encounter any problem with data files of any MC_Rack version please tell: }{\field{\*\fldinst {\lang1031\cgrid0  HYPERLINK mailto:knott@multichannelsystems.com }{\lang1031\cgrid0 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001e0000006b006e006f007400740040006d0075006c00740069006300680061006e006e0065006c00730079007300740065006d0073002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b4a0000006d00610069006c0074006f003a006b006e00
6f007400740040006d0075006c00740069006300680061006e006e0065006c00730079007300740065006d0073002e0063006f006d00000000000000000000000000000000}}}{\fldrslt {\cs17\ul\cf2 knott@multichannelsystems.com}}}{\lang1031\cgrid0  .
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {\lang1031\cgrid0 What is the MCStream OLE-Automation Server?
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {The MCStream Automation Server is a Dynamic Link Library (DLL) named MCStream.dll, which contains code for reading Data Files that were produced with Multi Channel System\rquote 
s data acquisition software MCRack. The code in the DLL can be called from any Window
s program which can access objects of an OLE Automation Server. Such programs can be written, e.g. in Visual Basic, Visual C++, Borland C++, and many other programming languages. This documentation comes with examples for programs written in Microsoft Vis
ual C++, Visual Basic for Applications, and MATLAB.
\par 
\par The MCStream OLE-Automation Server provides access to Automation Objects, representing MCRack data files, data streams in the data file, events (data) and info in the data streams. These Objects have attr
ibutes which can be read, and methods, which can be executed (This difference is most important for Visual Basic users). The stream object, for example, has an attribute named NumberOfStreams, which gives the number of streams stored in the data file. Thi
s object also has a method called OpenFile, to open a MCRack data file.
\par 
\par Creating objects and accessing their attributes and methods is easy, as this Visual Basic Fragment shows:
\par 
\par }{\f2     Dim mcsfile As Object       ' declare the file object
\par     Dim mcsstream As Object     ' declare the stream object
\par         
\par     ' create the file object from the ProgID
\par     Set mcsfile = CreateObject("mcstream.mcsstrm")
\par     
\par     ' open a file with the file object
\par     strFileToOpen = "c:\\data\\data000"
\par     iSuccess = mcsfile.OpenFile(strFileToOpen)
\par     
\par     If iSuccess = 1 Then
\par         ' determine number of streams in the file
\par         iStreamCount = mcsfile.StreamCount
\par }\pard \fi720\widctlpar\adjustright {\f2   mcsfile.CloseFile
\par }\pard \widctlpar\adjustright {\f2     End If
\par 
\par 
\par }{The CreateObject call loads the DLL and creates a file object. The attributes of this object can then be read and its methods can be called.
\par 
\par The MCStream OLE-Automation Server can read data from Version 1.1 and higher of MCRack (for previous versions there is a MATLAB reader). So you don\rquote t have to bother learning the (complex) file fo
rmat of the data files. The DLL contains a lot of code you would have to write yourself, if you wanted to access the data files directly. As the data format of MCRack will be adopted from time to time, we will provide new verions of the MCStream Automatio
n Server which can read NEW and OLD data formats. There is also code in the DLL patching some header inconsistencies due to resolved MCRack bugs.
\par 
\par In MCRack V1.4 were many problems resolved (We strongly recommend to read the release notes also!):
\par 
\par {\pntext\pard\plain\fs20\lang3081\cgrid \hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls12\adjustright {
NEW: The file format contains now information about the time window (continous, triggered, trigger stream), you used for recording. 
\par {\pntext\pard\plain\fs20\lang3081\cgrid \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls12\adjustright {
NEW: The file format contains information about the spike trigger levels used.
\par {\pntext\pard\plain\fs20\lang3081\cgrid \hich\af0\dbch\af0\loch\f0 3.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls12\adjustright {
NEW: Analyzer data (parameter) are now supported as events. The file format contains all necessary information about the analyzer settings.
\par }\pard \widctlpar\adjustright {
\par Not yet implemented:
\par Accessing HistoAnalyzer data.
\par 
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {\lang1031\cgrid0 Installing MCStream OLE-Automation Server
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {Versions of MCRack larger than 1.0.0.71  have the Automation Server already installed. For earlier versions of MCRack, or to install the automation server to another machine, proceed as follows:

\par 
\par {\pntext\pard\plain\fs20\lang3081\cgrid \hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls11\adjustright {
Copy MCStream.dll and Regsvr32.exe to the destination directory. This can be any directory you chose.
\par {\pntext\pard\plain\fs20\lang3081\cgrid \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls11\adjustright {Using t
he Windows Explorer, drag the MCStream.dll icon onto the Regsvr32.exe icon. If installation was successful, you get a message reading \ldblquote MCStream.dll was installed successfully\rdblquote 
\par }\pard \widctlpar\adjustright {
\par The second step is necessary to register the server with Windows, so that the DLL can be loaded on request, and objects can be instantiated.
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {\lang1031\cgrid0 The Object Hierarchy of the MCStream OLE-Automation Server
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {
\par The MCStream OLE-Automation Server provides access to objects of six different classes: File, Stream, Channel, Chunk, Event, TimeStamp, Info.
\par 
\par The File object represents a data file written with MCRack. It contains zero or more Stream objects, which represent data streams within the file, e.g. raw data, spike data, trigger data, etc.
\par 
\par A data stream has zero or more Channel objects, which contain information about the channels in the stream, most notably the channel name. Usually, you don\rquote 
t need the channel object, because you can access the channel names via the stream object. Stream dependent configuration information can be get as a Info object.
\par 
\par A data stream stores zero or more (usually quite a lot of) Event objects, representing one event or data point. These events are 
\par {\pntext\pard\plain\f3\fs20\lang3081\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls14\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls14\adjustright {
raw data measured at one point in time at all selected channels
\par {\pntext\pard\plain\f3\fs20\lang3081\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls14\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls14\adjustright {
a spike on one of the selected channels
\par {\pntext\pard\plain\f3\fs20\lang3081\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls14\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls14\adjustright {a trigger event
\par {\pntext\pard\plain\f3\fs20\lang3081\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls14\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls14\adjustright {
a analyzer or histoanalyzer event combining the different extracted parameter (min, max) of all selected channels at one time point
\par }\pard \widctlpar\adjustright {Internally, these events are stored in groups called Chunks. But usually, you don\rquote t need to know about Chunk objects.
\par 
\par Finally, every Event is associated with a TimeStamp object, which gives you the time (Year, Day, Month, Hour, Second, Millisecond, Microsecond, Nanosecond) this event was recorded. For convinience you can access the tim
e of the event  via the Event object directly.
\par \page 
\par Graphically, the object model looks like this:
\par }{\lang1024 {\shp{\*\shpinst\shpleft311\shptop217\shpright2039\shpbottom649\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz1\shplid1027{\sp{\sn shapeType}{\sv 202}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn lTxid}{\sv 65536}}{\shptxt \pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 File
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8193\dptxbx{\dptxbxtext\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 File
\par }}\dpx311\dpy217\dpxsize1728\dpysize432\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par 
\par }{\lang1024 {\shp{\*\shpinst\shpleft455\shptop190\shpright455\shpbottom766\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz5\shplid1031{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8197\dpline\dpptx0\dppty0\dpptx0\dppty576\dpx455\dpy190\dpxsize0\dpysize576
\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par 
\par }{\lang1024 {\shp{\*\shpinst\shpleft455\shptop306\shpright887\shpbottom306\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz6\shplid1032{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8198\dpline\dpptx0\dppty0\dpptx432\dppty0\dpx455\dpy306\dpxsize432\dpysize0
\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par }{\lang1024 {\shp{\*\shpinst\shpleft887\shptop-212\shpright2615\shpbottom220\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz0\shplid1026{\sp{\sn shapeType}{\sv 202}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn lTxid}{\sv 131072}}{\shptxt \pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 Stream
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8192\dptxbx{\dptxbxtext\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 Stream
\par }}\dpx887\dpy-212\dpxsize1728\dpysize432\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}
{\shp{\*\shpinst\shpleft1031\shptop220\shpright1031\shpbottom1516\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz7\shplid1033{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8199\dpline\dpptx0\dppty0\dpptx0\dppty1296\dpx1031\dpy220\dpxsize0\dpysize1296
\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par 
\par }{\lang1024 {\shp{\*\shpinst\shpleft1031\shptop336\shpright1319\shpbottom336\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz8\shplid1034{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8200\dpline\dpptx0\dppty0\dpptx288\dppty0\dpx1031\dpy336\dpxsize288\dpysize0
\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par }{\lang1024 {\shp{\*\shpinst\shpleft1319\shptop-182\shpright3047\shpbottom250\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz2\shplid1028{\sp{\sn shapeType}{\sv 202}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn lTxid}{\sv 196608}}{\shptxt \pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 Channel
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8194\dptxbx{\dptxbxtext\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 Channel
\par }}\dpx1319\dpy-182\dpxsize1728\dpysize432\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par 
\par }{\lang1024 {\shp{\*\shpinst\shpleft1031\shptop366\shpright1319\shpbottom366\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz9\shplid1035{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8201\dpline\dpptx0\dppty0\dpptx288\dppty0\dpx1031\dpy366\dpxsize288\dpysize0
\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par }{\lang1024 {\shp{\*\shpinst\shpleft1031\shptop115\shpright1031\shpbottom1411\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz13\shplid1039{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8205\dpline\dpptx0\dppty0\dpptx0\dppty1296\dpx1031\dpy115\dpxsize0\dpysize1296
\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}{\shp{\*\shpinst\shpleft1607\shptop280\shpright1607\shpbottom856\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz10\shplid1036
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8202
\dpline\dpptx0\dppty0\dpptx0\dppty576\dpx1607\dpy280\dpxsize0\dpysize576\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par }{\lang1024 {\shp{\*\shpinst\shpleft1319\shptop-382\shpright3047\shpbottom50\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz3\shplid1029{\sp{\sn shapeType}{\sv 202}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn lTxid}{\sv 262144}}{\shptxt \pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 Event
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8195\dptxbx{\dptxbxtext\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 Event
\par }}\dpx1319\dpy-382\dpxsize1728\dpysize432\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par }{\lang1024 {\shp{\*\shpinst\shpleft1751\shptop108\shpright3479\shpbottom540\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz4\shplid1030{\sp{\sn shapeType}{\sv 202}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn lTxid}{\sv 327680}}{\shptxt \pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 TimeStamp
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8196\dptxbx{\dptxbxtext\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 TimeStamp
\par }}\dpx1751\dpy108\dpxsize1728\dpysize432\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par }{\lang1024 {\shp{\*\shpinst\shpleft1607\shptop166\shpright1751\shpbottom166\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz11\shplid1037{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8203\dpline\dpptx0\dppty0\dpptx144\dppty0\dpx1607\dpy166\dpxsize144\dpysize0
\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par }{\lang1024 {\shp{\*\shpinst\shpleft1031\shptop491\shpright1319\shpbottom491\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz14\shplid1040{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8206\dpline\dpptx0\dppty0\dpptx288\dppty0\dpx1031\dpy491\dpxsize288\dpysize0
\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par }{\lang1024 {\shp{\*\shpinst\shpleft1319\shptop117\shpright3047\shpbottom549\shpfhdr0\shpbxcolumn\shpbypara\shpwr3\shpwrk0\shpfblwtxt0\shpz12\shplid1038{\sp{\sn shapeType}{\sv 202}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn lTxid}{\sv 393216}}{\shptxt \pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 Info
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8204\dptxbx{\dptxbxtext\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {\lang1031 Info
\par }}\dpx1319\dpy117\dpxsize1728\dpysize432\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{
\par 
\par 
\par 
\par 
\par 
\par The Event currently has five subclasses, representing raw data, spikes, trigger events, prameters, and histograms. The subclasses have additional methods and attributes. The method GetFirstEvent() of the stream object returns an object of the appropriate 
subclass. To determine, which object the method GetFirstEvent() will return, look at the DataType attribute of the stream object. There are get five different info classes for different DataType\rquote s.
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {\lang1031\cgrid0 Using the MCStream OLE-Automation Server
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {The MCStream OLE-A
utomation Server can be used from any program which is capable of acting as an OLE Automation Controller. Many programming environments provide tools to write such programs. We have provided examples in Visual Basic for Applications, Visual C++, and MATLA
B, which you can use and modify.
\par 
\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\f1\lang1031 {Visual Basic (and Visual Basic for Applications)
\par 
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {As the code fragment above shows, using the Automation Server from Visual Basic or Visual Basic for Applications is easy and straightforward. You just create a stream object
 with the call CreateObject(\ldblquote mcstream.mcsstrm\rdblquote ). You then use this object to navigate through the object hierarchy. 
\par 
\par The directory excel contains a code sample in the mcsstream.xls spreadsheet. It works with Excel 97. The sample code  opens a file and rea
ds the number of datastreams, and the number and names of the channels within the datastreams. For analog datastreams, the first few samples are read.
\par 
\par To look at the code, load mcsstream.xls in Excel and switch to the Visual Basic editor with the menu command Special|Macro|Visual Basic Editor. There you see code for the procedure testit.
\par 
\par Using Visual Basic could be useful, when acessing Analyzer Parameters, as these represent a strongly reduced data amount, which should be processible with Excel e.a..
\par 
\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\f1\lang1031 {Visual C++ 
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {
\par For many programming languages, including Microsoft Visual C++, the easiest way to use an OLE-Automation Server is to create wrapper classes for the objects provided by an automation server. To do this, you need the type library MCStream.tlb, 
which contains information about the classes, their attributes and methods provided by the OLE-Automation Server MCStream.dll. 
\par 
\par To produce wrapper classes for the Automation Objects in Visual C++ follow those steps:
\par 
\par {\pntext\pard\plain\fs20\lang3081\cgrid \hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls13\adjustright {Open Class Wizard via Ctrl+W or Vi
ew|Class Wizard.
\par {\pntext\pard\plain\fs20\lang3081\cgrid \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls13\adjustright {Click the \ldblquote Add Class\'85
\rdblquote  Button and choose \ldblquote From an OLE TypeLib\'85\rdblquote .
\par {\pntext\pard\plain\fs20\lang3081\cgrid \hich\af0\dbch\af0\loch\f0 3.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls13\adjustright {Select \ldblquote MCStream.tlb
\rdblquote  in the \ldblquote Import from OLE TypeLib\rdblquote  dialog.
\par {\pntext\pard\plain\fs20\lang3081\cgrid \hich\af0\dbch\af0\loch\f0 4.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls13\adjustright {Press \ldblquote OK\rdblquote 
 on the \ldblquote Confirm Classes\rdblquote  dialog.
\par }\pard \widctlpar\adjustright {
\par This will produce a couple of wrapper classes (IMCS*) in MCStream.h and MCStream.cpp which dispatch your calls to the automation server. Using these wrapper classes in Visual C++, the Visual Basic Code fragment then looks like this:
\par 
\par 
\par }{\f2     IMCSStreamFile mcsfile;     // declare the file object
\par     IMCSStream mcsstream;       // declare the stream object
\par         
\par     // create the file object from the ProgID
\par     mcsfile.CreateDispatch("mcstream.mcsstrm");
\par     
\par     // open a file with the file object
\par     CString strFileToOpen = "c:\\data\\data000";
\par     int iSuccess = mcsfile.OpenFile(strFileToOpen);
\par     
\par     if(iSuccess == 1)
\par     \{
\par         // determine number of streams in the file
\par         int iStreamCount = mcsfile.GetStreamCount();
\par }\pard \fi720\widctlpar\adjustright {\f2   mcsfile.CloseFile();
\par }\pard \widctlpar\adjustright {\f2     \}
\par 
\par }{So, once the wrapper classes are in place, using the automation object is also quite straightforward. The directory visualcpp/visualcpp contains a sample program. The relevant code can be found in the CMCStreamTestView::OnDraw method of the view.
\par An additi
onal Visual C++ example resides in directory visualcpp/MCStreamMEX. It is the interface code (MEX-file) for MATLAB access. As MATLAB is the tool of many MRack users, it is a fully programmed interface. There you will find sample code for most of the MCStr
eam automation server methods.
\par 
\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\f1\lang1031 {MATLAB
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {
Using the MCStream OLE-Automation Server from MATLAB is not so straightforward, because MATLAB can only make calls into DLLs of a very special format (MEX-Files). Within these DLLs programming looks like described in t
he Visual C++ section (the MCStreamMEX code is given as a Visual C++ example), but there is no need for you to work at this level as MATLAB support will be given. 
\par The directory matlab contains MEX Files and code for creating DATASTRM Objects in MATLAB, wh
ich can be used to directly access data files. Please read readme.txt there and refer for further instructions to MATLAB help (that means type help datastrm and help nextdata in MATLAB command window).
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {\lang1031\cgrid0 The File Object
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {Attributes (Use Name directly in Visual Basic, but with Prefix Get...() in Visual C++, in V1.4 wrongly as Methods indicated Attributes have been corrected!):
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
CMCSStreamFile::GetTimeStampStartPressed() gives you a CMCSTimeStamp with time of pressing start, that be later than than the start of data for recording replayed files
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
CMCSStreamFile::GetStopTime() continous it's function. 
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
CMCSStreamFile::GetTimeStamp() is kept for compatibility and gives back CMCSStreamFile::GetStartTime()
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls15\adjustright {\lang1031\cgrid0 
short CMCSStreamFile::GetElectrodeChannels(), short CMCSStreamFile::GetAnalogChannels(),short CMCSStreamFile::GetDigitalChannels() ,short CMCSStreamFile::GetTotalChannels()\line 
give you information about the MEA/Hardware page channel settings you used. This is important information for users, that do not have MEA Layout.
\par }\pard \widctlpar\adjustright {
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Name\cell Type\cell Description\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr
\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {HeaderVersion\cell Short\cell 
Version Number of Header\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {StreamCount\cell Long\cell Number of Streams in the file\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {
MillisamplesPerSecond\cell Long \cell Hardware samples per second * 1000\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Comment\cell LPCSTR\cell Comment about the file\cell }\pard \widctlpar\intbl\adjustright {\row 
}\pard \widctlpar\intbl\adjustright {Year\cell Short\cell Year (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Month\cell Short\cell Month (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {Day\cell Short\cell Day (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Hour\cell Short\cell Hour (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {Minute\cell Short\cell Minute (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Second\cell Short\cell Second (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {Millisecond\cell Short\cell Millisecond (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Microsecond\cell Short\cell Microsecond (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row 
}\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Nanosecond\cell Short\cell Nanosecond (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
Short OpenFile(LPCSTR strFileName)\cell Opens the file strFileName, returns 1 on success.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Short CloseFile\cell Closes an opened file, returns 1 on success.\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPDISPATCH GetStream(long Index)\cell Returns a pointer to the dispatch interface of stream # Index\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright 
{LPDISPATCH GetTimeStamp()\cell Returns the Timestamp (useful for cloning as timestamps are used as parameters elsewhere)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {\cell \cell }\pard \widctlpar\intbl\adjustright {
\row }\pard \widctlpar\intbl\adjustright {Long GetSweepCount()\cell Sweep counted as time gaps.}{\lang1031\cgrid0  For old (<1.6) or incomplete saved files}{ it reads }{\lang1031\cgrid0 through all the data o}{n first call }{\lang1031\cgrid0 
and builds an index. This index is written to the windows temporary directory and called mcsidxXXXXXXXX..., where XXXXXXXX... is the time stamp of pressing start for that file. Further openings of that file will use this index.}{\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Long GetSweepLength()\cell Sweep lenght as determined from first sweep\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {
LPDISPATCH GetSweepStartTimeAt(long lSweep);
\par \cell Sweep start time of the lSweep\rquote th sweep\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPDISPATCH GetSweepEndTimeAt(long lSweep)\cell Sweep start time of the lSweep\rquote th sweep\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Long GetStartTriggerStreamID()\cell Returns the stream id of the trigger used for start recording:
\par >=0 stream id
\par -1 for continous recording
\par (-2 for triggered recording, but not determinable trigger stream, only for data recorded before V1.4 with trigger stream not recorded or more than 1 trigger stream recorded) 
\par \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Long GetStopTriggerStreamID()\cell Returns the stream id of the trigger used for stop recording, if time window mode was StartAndStopOnTrigger:
\par \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {
\par Long GetPreTriggerTime();\cell Fixed Window: Window Distance
\par StartOnTrigger: Pre Trigger
\par StartAndStopOnTrigger: Pre Trigger
\par  (-1 for data recorded before V1.4 as info actually not contained in data format)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Long GetPostTriggerTime();\cell Fixed Window: Window Extent
\par StartOnTrigger: Window Extent
\par StartAndStopOnTrigger: Post Trigger
\par  (-1 for data recorded before V1.4 as info actually not contained in data format, but is filled for old data in case of inferred StartOnTrigger/ StartAndStopOnTrigger)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {
short GetSourceType()\cell 1 for 8x8 MEA configuration , 0 for linear channel configuration\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPDISPATCH GetStopTime()\cell Returns the }{\lang1031\cgrid0 
CMCSTimeStamp with time of}{ end of data. }{\lang1031\cgrid0 For incomplete saved files and for old file it's value will only OK after calling CMCSStreamFile::GetSweepCount().}{\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {LPDISPATCH }{\lang1031\cgrid0 CMCSStreamFile::GetStartTime() }{\cell }{\lang1031\cgrid0 Returns a CMCSTimeStamp with start time of data}{\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {
BOOL GetWithIndex()\cell TRUE if index is contained in file, future use\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {long GetSoftwareVersionMajor()\cell Use GetSoftwareVersionMajor() >> 16 and
\par GetSoftwareVersionMajor() & 0x0000FFFF to access main version\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 
\trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {long GetSoftwareVersionMinor()\cell Use GetSoftwareVersionMinor() >> 16 and
\par GetSoftwareVersionMinor() & 0x0000FFFF to access patch release numbers\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {\tab 
\par \tab 
\par \tab 
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {\lang1031\cgrid0 The Stream Object
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {Attributes (Use Name directly in Visual Basic, but with Prefix Get...() in Visual C++, in V1.4 wrongly as Methods indicated Attributes have been corrected!):
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Name\cell Type\cell Description\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr
\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {ChannelCount\cell Long\cell 
Number of Channels in the stream\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {HeaderVersion\cell Long\cell Version Number of Header\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {
DataType\cell LPCSTR\cell Data Type. One of \ldblquote analog\rdblquote  , \ldblquote spikes\rdblquote , \ldblquote trigger\rdblquote , \ldblquote params\rdblquote , \ldblquote histo\rdblquote \cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {Name\cell LPCSTR\cell Name of the stream, Use Names of Streams to keep track as Names are unique and stay the same between files\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Commet\cell 
LPCSTR\cell Comment\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Id\cell Short\cell Id of the stream\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {MillisamplesPerSecond\cell Long
\cell Sampling Rate in Millisamples per second\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {FormatVersion\cell Short\cell Format Version\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {UnitSign\cell Char\cell Unit Sign, e.g. V for Volts\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {ADBits\cell Short\cell Number of Bits of the ADConverter\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {ADZero\cell Long\cell AD Converter Value corresponding zero voltage\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl
\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard 
\widctlpar\intbl\adjustright {UnitsPerAD\cell Double\cell Conversion factor from AD values to micro-volts\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
LPDISPATCH GetChannel(short Index)\cell Get a channel object\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPCSTR GetChannelName(short Index)\cell Returns Name of Channel # Index\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPDISPATCH GetFirstEvent()\cell Returns the dispatch pointer of the first event of the stream\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {
LPDISPATCH GetFirstChunk()\cell Gets the first chunk in that stream\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPDISPATCH GetNextChunk(LPDISPATCH pCurrentChunk)\cell Gets the next chunk in that stream\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPDISPATCH GetFirstEvent()\cell Gets the first chunk in that stream\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {
LPDISPATCH GetNextEvent(LPDISPATCH pCurrentEvent)\cell Not supported, retained for compatibility, use event.Next() instead\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPDISPATCH GetChunkNextTo(LPDISPATCH ts)\cell 
Takes a time stamp, returns the first chunk with a time stamp > than the one given\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPDISPATCH GetEventNextTo(LPDISPATCH ts)\cell Takes a time stamp, returns the first ev
ent with a time stamp >= than the one given\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Void EventCountFromTo(LPDISPATCH dispFrom, LPDISPATCH dispTo, long FAR* arrEventCount)\cell 
Takes two time stamps, returns the number of events beween the two times
\par ATTENTION, take care to give a pointer to an array of channel number size as arrEventCount as at spike data typ event count is done for each channel
\par As the method takes pointer, it can only be used from programming languages supporting pointers (not Visual Basic as far as the document writer knows!)\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 
\trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {LPDISPATCH GetInfo()\cell Returns an Info Object (eg. InfoTrigger)\cell }\pard \widctlpar\intbl\adjustright {\row 
}\pard \widctlpar\adjustright {
\par 
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {\lang1031\cgrid0 The Event Object
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {Attributes (Use Name directly in Visual Basic, but with Prefix Get...() in Visual C++, in V1.4 wrongly as Methods indicated Attributes have been corrected!):
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4536\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx9498\pard \widctlpar\intbl\adjustright {Name\cell Type\cell Description\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr
\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4536\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9498\pard \widctlpar\intbl\adjustright {Year\cell short\cell Year (GMT)\cell 
}\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Month\cell short\cell Month (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Day\cell short\cell Day (GMT)\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Hour\cell short\cell Hour (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Minute\cell short\cell Minute (GMT)\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Second\cell short\cell Second (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Millisecond\cell short\cell Millisecond (GMT)\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Microsecond\cell short\cell Microsecond (GMT)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Nanosecond\cell short\cell Nanosecond (GMT)\cell 
}\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {SecondFromStart\cell long\cell Second from start.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {MillisecondFromStart\cell short\cell 
Millisecond from start.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {MicrosecondFromStart\cell short\cell Microsecond from start.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {
NanosecondFromStart\cell short\cell Nanosecond from start.\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 
\trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb \cellx4536\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9498\pard \widctlpar\intbl\adjustright {TimeStamp\cell LPDISPATCH\cell Returns the timestamp of the event\cell 
}\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Short Next()
\cell Reads next event and returns 1 on success\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv
\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb 
\cellx9476\pard \widctlpar\intbl\adjustright {LPDISPATCH Clone()\cell Returns the dispatch pointer of a cloned event. \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {The EvtRaw Object
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {The EvtRaw class is a subclass of the Event class, and therefore has the same Attributes and Methods. Additionally, it has a method to read the data of the individual channels:
\par 
\par Additional Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
Short GetADData(short iChannel)\cell Returns AD value of channel # iChannel. Note that iChannel must be smaller than the number of channels of the stream object.\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt
\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {BOOL GetADDataArray(short FAR* buf)\cell 
For better performance in pointer supporting languages use this method to get the data of all channels at once\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {The EvtSpike Object
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {The EvtSpike class is a subclass of the Event class, and therefore has the same Attributes and Methods. Additionally, it has a method to read the data of the individual channels:
\par 
\par Additional Attributes:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4536\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx9498\pard \widctlpar\intbl\adjustright {Count\cell Long\cell Returns the number of AD values of the spike\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl
\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4536\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9498\pard 
\widctlpar\intbl\adjustright {PreEvent\cell Long\cell Returns the number of AD values before threshold crossing\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 
\trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4536\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9498\pard \widctlpar\intbl\adjustright {Channel\cell Short\cell 
Returns the channel number (channel.GetId(), not hardware id) the spike belongs to. Notize that spikes are saved in timely ordered fashion in data files, so after each event.next() check for the channel number.\cell }\pard \widctlpar\intbl\adjustright {
\row }\pard \widctlpar\adjustright {
\par Additional Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
Short GetADData(long iIndex)\cell Returns AD value of the spike at iIndex. Note that iIndex must be smaller than GetCount().\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb
\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {BOOL GetADDataArray(short FAR* buf)\cell 
For better performance in pointer supporting languages use this method to get the data of one spike at once\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {The EvtTrigger Object
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {The EvtTrigger class is a subclass of the Event class, and therefore has the same Attributes and Methods. Additionally, it has a method to read the data of the individual channels:
\par 
\par Additional Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
Short GetADData()\cell Returns AD value at threshold crossing\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {The EvtParam Object 
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {The EvtParame class is a subclass of the Event class, and therefore has the same Attributes and Methods. Additionally, it has a method to read the data of the individual channels:
\par 
\par Additional Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
float GetMin(short iChannel)\cell Get Min [V], return value undefined, if min was not recorded\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetMax(short iChannel)\cell 
Get  Max [V] , return value undefined, if max was not recorded\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetTmin(short iChannel)\cell Get TMin [ms] , return value undefined, if tmin was not recorded\cell 
}\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetTmax(short iChannel)\cell Get TMax [ms] , return value undefined, if tmax was not recorded\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {float GetHeight(short iChannel)\cell Get Height [V] , return value undefined, if height was not recorded\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetWidth(short iChannel)\cell 
Get Width [ms] , return value undefined, if width was not recorded. Width of spike is defined as distance from spike min to max\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetAmplitude(short iChannel)\cell 
Get Amplitude [V] , return value undefined, if ampltude was not recorded\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetArea(short iChannel)\cell 
Get Area [V*ms] , return value undefined, if area was not recorded\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetNumber(short iChannel)\cell Get Number [no unit] , return value undefine
d, if number was not recorded\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetRate(short iChannel)\cell Get Rate [Hz] , return value undefined, if rate was not recorded\cell }\pard \widctlpar\intbl\adjustright 
{\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 
\clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {BOOL GetDataArray(short iChannel, float* buf)\cell 
Get the recorded data array with all parameter. Return value must be indexed according to InfoParameter::MinPos(),MaxPos() etc.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {EvtHisto
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {Is not fully coded yet.
\par 
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {The Info Objects
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {The Info Objects are stream dependent and contain additional configuration information about the stream.
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {InfoRaw
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {Up to now there is no need for additional information about analog data
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {InfoTrigger
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {
\par Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
Long GetChannel()\cell Channel number on which was triggered. The number given is the hardware channel number if a electrode channel was used, or channel index if one of the separate analog channel was used\cell }\pard \widctlpar\intbl\adjustright {\row 
}\pard \widctlpar\intbl\adjustright {Long GetDeadTime()\cell Dead time for new trigger events after a trigger event\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Long GetLevel()\cell Trigger level in \'b5
V (error *10 corrected)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Long GetSlope()\cell Slope of trigger
\par Negative slope: 1
\par Positive slope: 0\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Long GetTriggeredStreamId();\cell Stream Id of stream on which was triggered\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70
\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb 
\cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {LPCSTR GetInputBufferName()\cell 
Name of stream on which was triggered, actual no recorded, MCStream.dll calculates the Name from the TriggeredStreamID, if the according Stream is recorded. In future MCRack version data file format will be adopted.\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {InfoSpike
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {
\par Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
short GetSlope(short iChannel)\cell Slope of spike trigger
\par Negative slope: 1
\par Positive slope: 0
\par Absolute level: -1\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetDeadTime()\cell Dead time for a new spike event after a spike event in ms\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {float GetLevel(short iChannel)\cell Trigger level on iChannel in \'b5V\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float GetPreTrigger()\cell Pretrigger time in ms\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
float GetPostTrigger()\cell Posttrigger time in ms\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {InfoParam
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {
\par Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {short MinPos()
\cell Parameter position for GetDataArray()\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {short MaxPos()\cell Parameter position for GetDataArray()\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {short TMinPos()\cell Parameter position for GetDataArray()\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {short TMaxPos()\cell Parameter position for GetDataArray()\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {short HeightPos()\cell Parameter position for GetDataArray()\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {short WidthPos()\cell 
Parameter position for GetDataArray()\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {short AmplitudePos()\cell Parameter position for GetDataArray()\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {short AreaPos()\cell Parameter position for GetDataArray()\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {short NumberPos()\cell Parameter position for GetDataArray()\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {short RatePos()\cell Parameter position for GetDataArray()\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {short NumTimeWindows()\cell 
Number of Time Windows over which the Analyzer averaged\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {LPCSTR InputBufferName()\cell Stream on which the Analyzer extracted parameters\cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {float TimeWindowTime1()\cell depending on the Time Window selection either the Window Distance or the Pre-Trigger\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {float TimeWindowTime2()\cell depending on the Time Window selection either the Window Extent, or the Post-Trigger interval with 'Start And Stop On Trigger'\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {short TimeWindowChoice()\cell 0='Fixed Window', 1= 'Start On Trigger',2= 'Start And Stop On Trigger' \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {short TimeWindowStartTriggerID()\cell 
ID of the selected start trigger\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt
\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard 
\widctlpar\intbl\adjustright {short TimeWindowStopTriggerID()\cell ID of the selected stop trigger\cell }\pard \widctlpar\intbl\adjustright {\row }\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\lang3081\cgrid {
\par InfoHisto
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {Not fully coded yet.
\par 
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {Channel Object
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {
Channel Objects have methods to get the hardware id, the recording id and the channel name. Use this information to convert between the different channel index methods (see sample code in visualcpp/MCStreamMEX).
\par 
\par Attributes (Use Name directly in Visual Basic, but with Prefix Get...() in Visual C++, in V1.4 wrongly as Methods indicated Attributes have been corrected!):
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Name\cell Type\cell Description\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr
\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {HeaderVersion\cell Short\cell 
Channel Header Version\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {ID\cell Long\cell Number of the channel in recording order\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {HWID
\cell Long\cell Number of the channel in hardware multiplexing order\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Name\cell LPCSTR\cell Name of the channel\cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {Comment\cell LPCSTR\cell Comment of the channel\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh
\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx3112\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {ReferenceCount\cell Long\cell 
Number of channel the channel refers to (always 1)\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par Methods:
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Signature\cell Description\cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {
long GetRefBufferID(long Index)\cell Stream ID the channel refers to (eg. for a spike channel the is the according analog buffer the spikes were extracted from). Call with Index=0\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70
\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb 
\cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {long GetRefChannelID(long Index)\cell Channel ID the channel refers to (
eg. for a spike channel the is the according analog channel the spikes were extracted from). Call with Index=0.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par }\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\lang3081\kerning28\cgrid {Timestamp
\par }\pard\plain \widctlpar\adjustright \fs20\lang3081\cgrid {
\par Methods:
\par 
\par }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Short GetYear()\cell \cell }\pard 
\widctlpar\intbl\adjustright {\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {Short GetMonth()
\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Short GetDay()\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Short GetHour()\cell \cell }\pard 
\widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Short GetMinute()\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Short GetSecond()\cell \cell }\pard \widctlpar\intbl\adjustright {\row 
}\pard \widctlpar\intbl\adjustright {Short GetMillisecond()\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Short GetMicrosecond()\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {Short GetNanosecond()\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Long GetSecondFromStart()\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {Short GetMillisecondFromStart()\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Short GetMicrosecondFromStart()\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard 
\widctlpar\intbl\adjustright {Short GetNanosecondFromStart()\cell \cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Void SetMillisecondFromStart(short sMilli)\cell 
Use this methods to set cloned timestamps for use as parameters\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Void SetMicrosecondFromStart(short sMicro)\cell 
Use this methods to set cloned timestamps for use as parameters\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Void SetNanosecondFromStart(short sNano)\cell Use this methods to set cloned timestamps 
for use as parameters\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\intbl\adjustright {Void SetSecondFromStart(long sSecond)\cell Use this methods to set cloned timestamps for use as parameters\cell }\pard \widctlpar\intbl\adjustright {
\row }\trowd \trgaph70\trleft-70\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 
\clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx4111\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx9476\pard \widctlpar\intbl\adjustright {LPDISPATCH Clone()\cell 
Use this methods to clone timestamps for use as parameters, as time of file start is contained in every timestamp, you can use every timestamp for cloning\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \widctlpar\adjustright {
\par }}